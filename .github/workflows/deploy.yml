name: CI/CD Pipeline for Nginx Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering for the deployment stage

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Amazon ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

    - name: Build and Tag Docker Image
      run: |
        docker build -t my-nginx-app .
        docker tag my-nginx-app:latest ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Push Docker Image to ECR
      run: |
        docker push ${{ secrets.ECR_REPOSITORY }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Wait for Manual Approval
      run: |
        echo "Review the build and approve before proceeding with deployment."
        echo "Trigger the 'deploy' job manually using 'workflow_dispatch' when ready."
    
    - name: Deploy to EC2 via SSH
      if: github.event_name == 'workflow_dispatch'  # Ensure this job only runs when triggered manually
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Pull the latest image from ECR
          sudo docker pull $ECR_REPOSITORY:latest
          
          # Stop and remove any existing container named "my-nginx-app"
          sudo docker stop my-nginx-app || true
          sudo docker rm my-nginx-app || true
          
          # Run the new container on port 80
          sudo docker run -d -p 80:80 --name my-nginx-app $ECR_REPOSITORY:latest